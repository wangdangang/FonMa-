const radarIframe = document.getElementById(‚Äúradar-iframe‚Äù);
const radarContainer = document.getElementById(‚Äúradar-container‚Äù);
const toggleBtn = document.getElementById(‚Äútoggle-btn‚Äù);
const notifyBtn = document.getElementById(‚Äúnotify-btn‚Äù);
const confirmBtn = document.getElementById(‚Äúconfirm-btn‚Äù);
const forecastResult = document.getElementById(‚Äúforecast-result‚Äù);

let animationRunning = true;
let notifyInterval = null;
let selectedCoord = null;
let pin = null;
let isRadarLoaded = false;

// ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏£‡∏î‡∏≤‡∏£‡πå - ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ error
function loadRadar() {
// ‡πÉ‡∏ä‡πâ Windy.com ‡πÅ‡∏ó‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö iframe embedding
const windyUrl = ‚Äúhttps://embed.windy.com/embed2.html?lat=13.736&lon=100.523&detailLat=13.736&detailLon=100.523&width=650&height=450&zoom=8&level=surface&overlay=rain&product=ecmwf&menu=&message=&marker=&calendar=now&pressure=&type=map&location=coordinates&detail=&metricWind=default&metricTemp=default&radarRange=-1‚Äù;

radarIframe.src = windyUrl;

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ error ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î iframe
radarIframe.onload = () => {
isRadarLoaded = true;
forecastResult.textContent = ‚Äú‡πÅ‡∏ï‡∏∞‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î‚Äù;
};

radarIframe.onerror = () => {
forecastResult.textContent = ‚Äú‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‚Äù;
};

// Timeout ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î
setTimeout(() => {
if (!isRadarLoaded) {
forecastResult.textContent = ‚Äú‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≤‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‚Ä¶‚Äù;
}
}, 10000);
}

// ‡∏´‡∏¢‡∏∏‡∏î/‡πÄ‡∏•‡πà‡∏ô animation
function toggleAnimation() {
animationRunning = !animationRunning;
radarIframe.style.opacity = animationRunning ? ‚Äú1‚Äù : ‚Äú0.3‚Äù;
radarIframe.style.filter = animationRunning ? ‚Äúnone‚Äù : ‚Äúgrayscale(50%)‚Äù;
toggleBtn.textContent = animationRunning ? ‚Äú‚è∏Ô∏è ‡∏´‡∏¢‡∏∏‡∏î‚Äù : ‚Äú‚ñ∂Ô∏è ‡πÄ‡∏•‡πà‡∏ô‚Äù;
}

// ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ù‡∏ô‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏° (‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡πâ‡∏™‡∏°‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏∂‡πâ‡∏ô)
function analyzeRain() {
const scenarios = [
{ intensity: ‚Äú‡πÄ‡∏ö‡∏≤‚Äù, minutes: Math.floor(Math.random() * 30) + 10 },
{ intensity: ‚Äú‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á‚Äù, minutes: Math.floor(Math.random() * 45) + 15 },
{ intensity: ‚Äú‡∏´‡∏ô‡∏±‡∏Å‚Äù, minutes: Math.floor(Math.random() * 60) + 30 },
{ intensity: ‚Äú‡∏ü‡πâ‡∏≤‡∏£‡πâ‡∏≠‡∏á‚Äù, minutes: Math.floor(Math.random() * 90) + 45 }
];

return scenarios[Math.floor(Math.random() * scenarios.length)];
}

// ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ù‡∏ô - ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ permission
async function startRainNotifications() {
if (!(‚ÄúNotification‚Äù in window)) {
alert(‚Äú‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‚Äù);
return;
}

try {
const permission = await Notification.requestPermission();

```
if (permission === "granted") {
  notifyBtn.textContent = "üîî ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà";
  notifyBtn.style.backgroundColor = "#4CAF50";
  
  // ‡∏•‡πâ‡∏≤‡∏á interval ‡πÄ‡∏Å‡πà‡∏≤
  if (notifyInterval) {
    clearInterval(notifyInterval);
  }
  
  // ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏∏‡∏Å 5 ‡∏ô‡∏≤‡∏ó‡∏µ
  notifyInterval = setInterval(() => {
    const rain = analyzeRain();
    new Notification("üåßÔ∏è FonMa ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ù‡∏ô", {
      body: `‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå: ‡∏ù‡∏ô${rain.intensity} ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô ${rain.minutes} ‡∏ô‡∏≤‡∏ó‡∏µ`,
      icon: "/logo.png",
      tag: "rain-forecast", // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ã‡πâ‡∏≥
    });
  }, 5 * 60 * 1000);
  
  // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
  const firstRain = analyzeRain();
  new Notification("üåßÔ∏è FonMa ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô", {
    body: `‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ‡∏ù‡∏ô${firstRain.intensity} ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô ${firstRain.minutes} ‡∏ô‡∏≤‡∏ó‡∏µ`,
    icon: "/logo.png",
  });
  
} else if (permission === "denied") {
  alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå");
}
```

} catch (error) {
console.error(‚Äú‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô:‚Äù, error);
alert(‚Äú‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ç‡∏≠‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏î‡πâ‚Äù);
}
}

// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ö‡∏ô iframe
function createOverlay() {
const overlay = document.createElement(‚Äúdiv‚Äù);
overlay.style.position = ‚Äúabsolute‚Äù;
overlay.style.top = ‚Äú0‚Äù;
overlay.style.left = ‚Äú0‚Äù;
overlay.style.width = ‚Äú100%‚Äù;
overlay.style.height = ‚Äú100%‚Äù;
overlay.style.backgroundColor = ‚Äútransparent‚Äù;
overlay.style.cursor = ‚Äúcrosshair‚Äù;
overlay.style.zIndex = ‚Äú10‚Äù;

radarContainer.appendChild(overlay);
return overlay;
}

// ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î
function setupCoordinateSelection() {
const overlay = createOverlay();

overlay.addEventListener(‚Äúclick‚Äù, (event) => {
const rect = radarContainer.getBoundingClientRect();
const x = event.clientX - rect.left;
const y = event.clientY - rect.top;

```
selectedCoord = { x, y };

// ‡∏•‡∏ö pin ‡πÄ‡∏Å‡πà‡∏≤
if (pin) {
  pin.remove();
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á pin ‡πÉ‡∏´‡∏°‡πà
pin = document.createElement("div");
pin.style.position = "absolute";
pin.style.left = `${x - 12}px`;
pin.style.top = `${y - 40}px`;
pin.style.width = "24px";
pin.style.height = "40px";
pin.style.backgroundColor = "#FF4444";
pin.style.borderRadius = "50% 50% 50% 0";
pin.style.transform = "rotate(-45deg)";
pin.style.border = "2px solid white";
pin.style.boxShadow = "0 2px 4px rgba(0,0,0,0.3)";
pin.style.zIndex = "20";
pin.style.cursor = "pointer";

// ‡πÄ‡∏û‡∏¥‡πà‡∏° animation
pin.style.animation = "bounce 0.5s ease-in-out";

radarContainer.appendChild(pin);

confirmBtn.style.display = "inline-block";
forecastResult.textContent = "üìç ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÅ‡∏•‡πâ‡∏ß - ‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå";
```

});
}

// ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏û‡∏¥‡∏Å‡∏±‡∏î
confirmBtn.addEventListener(‚Äúclick‚Äù, async () => {
if (!selectedCoord) {
alert(‚Äú‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡πà‡∏≠‡∏ô‚Äù);
return;
}

confirmBtn.disabled = true;
confirmBtn.textContent = ‚Äú‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‚Ä¶‚Äù;
forecastResult.textContent = ‚Äúüîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ù‡∏ô‚Ä¶‚Äù;

try {
const radarWidth = radarIframe.offsetWidth;
const radarHeight = radarIframe.offsetHeight;

```
// ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏à‡∏£‡∏¥‡∏á (‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì)
const lat = 13.736 + (selectedCoord.y / radarHeight - 0.5) * 2;
const lon = 100.523 + (selectedCoord.x / radarWidth - 0.5) * 2;

const body = {
  x: selectedCoord.x / radarWidth,
  y: selectedCoord.y / radarHeight,
  lat: lat,
  lon: lon,
  timestamp: new Date().toISOString()
};

// ‡∏•‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á
let response;
let attempts = 0;
const maxAttempts = 3;

while (attempts < maxAttempts) {
  try {
    response = await fetch("https://forms-forecast-server.onrender.com/track", {
      method: "POST",
      headers: { 
        "Content-Type": "application/json",
        "Accept": "application/json"
      },
      body: JSON.stringify(body),
      timeout: 10000
    });
    
    if (response.ok) break;
    
  } catch (error) {
    attempts++;
    if (attempts < maxAttempts) {
      await new Promise(resolve => setTimeout(resolve, 2000));
    }
  }
}

// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå
const forecastResponse = await fetch("https://forms-forecast-server.onrender.com/forecast");
const data = await forecastResponse.json();

if (data.error) {
  // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á‡πÅ‡∏ó‡∏ô
  const mockForecast = analyzeRain();
  const arrivalTime = new Date(Date.now() + mockForecast.minutes * 60000);
  
  forecastResult.innerHTML = `
    <div style="background: #e3f2fd; padding: 15px; border-radius: 8px; margin: 10px 0;">
      <h3 style="margin: 0 0 10px 0; color: #1976d2;">üåßÔ∏è ‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏≤‡∏Å‡∏≤‡∏®</h3>
      <p style="margin: 5px 0;"><strong>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô:</strong> ‡∏ù‡∏ô${mockForecast.intensity}</p>
      <p style="margin: 5px 0;"><strong>‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏≤‡∏ñ‡∏∂‡∏á:</strong> ${mockForecast.minutes} ‡∏ô‡∏≤‡∏ó‡∏µ</p>
      <p style="margin: 5px 0;"><strong>‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì:</strong> ${arrivalTime.toLocaleTimeString('th-TH')}</p>
      <small style="color: #666;">*‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á - ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö</small>
    </div>
  `;
} else {
  const arrivalTime = new Date(data.expected_arrival);
  forecastResult.innerHTML = `
    <div style="background: #e8f5e8; padding: 15px; border-radius: 8px; margin: 10px 0;">
      <h3 style="margin: 0 0 10px 0; color: #2e7d32;">üåßÔ∏è ‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏≤‡∏Å‡∏≤‡∏®</h3>
      <p style="margin: 5px 0;"><strong>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô:</strong> ‡∏ù‡∏ô${data.rain_level}</p>
      <p style="margin: 5px 0;"><strong>‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏≤‡∏ñ‡∏∂‡∏á:</strong> ${data.minutes_until_arrival} ‡∏ô‡∏≤‡∏ó‡∏µ</p>
      <p style="margin: 5px 0;"><strong>‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì:</strong> ${arrivalTime.toLocaleTimeString('th-TH')}</p>
    </div>
  `;
}
```

} catch (error) {
console.error(‚Äú‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:‚Äù, error);

```
// ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ API ‡∏•‡πà‡∏°
const mockForecast = analyzeRain();
const arrivalTime = new Date(Date.now() + mockForecast.minutes * 60000);

forecastResult.innerHTML = `
  <div style="background: #fff3e0; padding: 15px; border-radius: 8px; margin: 10px 0;">
    <h3 style="margin: 0 0 10px 0; color: #ef6c00;">‚ö†Ô∏è ‡πÇ‡∏´‡∏°‡∏î‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå</h3>
    <p style="margin: 5px 0;"><strong>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô:</strong> ‡∏ù‡∏ô${mockForecast.intensity}</p>
    <p style="margin: 5px 0;"><strong>‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏≤‡∏ñ‡∏∂‡∏á:</strong> ${mockForecast.minutes} ‡∏ô‡∏≤‡∏ó‡∏µ</p>
    <p style="margin: 5px 0;"><strong>‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì:</strong> ${arrivalTime.toLocaleTimeString('th-TH')}</p>
    <small style="color: #666;">*‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ - ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á</small>
  </div>
`;
```

} finally {
confirmBtn.disabled = false;
confirmBtn.textContent = ‚Äú‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏û‡∏¥‡∏Å‡∏±‡∏î‚Äù;
}
});

// ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS animation
const style = document.createElement(‚Äòstyle‚Äô);
style.textContent = `@keyframes bounce { 0%, 20%, 53%, 80%, 100% { transform: rotate(-45deg) translateY(0); } 40%, 43% { transform: rotate(-45deg) translateY(-10px); } 70% { transform: rotate(-45deg) translateY(-5px); } }`;
document.head.appendChild(style);

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
document.addEventListener(‚ÄúDOMContentLoaded‚Äù, () => {
console.log(‚ÄúüåßÔ∏è FonMa ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‚Ä¶‚Äù);

loadRadar();
setupCoordinateSelection();

toggleBtn.addEventListener(‚Äúclick‚Äù, toggleAnimation);
notifyBtn.addEventListener(‚Äúclick‚Äù, startRainNotifications);

// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
setTimeout(() => {
if (navigator.onLine) {
console.log(‚Äú‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï‡πÅ‡∏•‡πâ‡∏ß‚Äù);
} else {
forecastResult.textContent = ‚Äú‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï‚Äù;
}
}, 2000);
});